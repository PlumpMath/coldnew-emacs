#+TITLE: Helm Integrate Setup
#+AUTHOR: Yen-Chin, Lee <coldnew>
#+email: coldnew.tw at gmail.com
#+DESCRIPTION: Integrate Helm with coldnew's emacs

#+SETUPFILE: configs.setup

* Install libraries

To install these libraries, you only need to use =M-x package-install= command.

#+BEGIN_SRC emacs-lisp
  (package-install 'helm)
  (package-install 'helm-projectile)      ; Integrate with `projectile'
  (package-install 'helm-gtags)           ; Integrate with `gtags'
  (package-install 'helm-bm)              ; Integrate with `bm.el'
  (package-install 'helm-c-yasnippet)     ; Integrate with `yasnippet'
  (package-install 'helm-cscope)          ; Integrate with `cscope'
  (package-install 'helm-dash)            ; Integrate with `dash'
  (package-install 'helm-swoop)           ; Integrate with `swoop'
#+END_SRC

* Install System packages

Since [[https://github.com/emacs-helm/helm][helm]] integrate some external tool like [[https://www.gnu.org/software/global/][gtags]], [[http://cscope.sourceforge.net/][cscope]] ...etc. We need to install these tools to our system.

** Mac OSX

It's recommand to use [[http://brew.sh/][homebrew]] to install [[https://github.com/ggreer/the_silver_searcher][the_silver_searcher]] under Mac OSX.

#+BEGIN_SRC sh :tangle no :noweb-ref install-in-macosx
  brew install global
  brew install cscope
#+END_SRC

** Gentoo Linux

If you use Gentoo Linux, you can use portage to install it.

#+BEGIN_SRC emacs-lisp :tangle no :noweb-ref install-in-gentoo
  emerge dev-util/cscope
  emerge dev-util/global
#+END_SRC

* Core package setup

#+BEGIN_SRC emacs-lisp :noweb no-export :exports code
  (use-package helm
    :config
    ;; load default helm setup
    (require 'helm-config)
    ;; enable helm globally
    (helm-mode 1)
    ;; extra helm configs
    <<helm-config>>)
#+END_SRC

** Use fuzzy match in helm

#+BEGIN_SRC emacs-lisp :tangle no :noweb-ref helm-config
  ;; Use fuzzy match in helm
  (setq helm-M-x-fuzzy-match t)
  (setq helm-buffers-fuzzy-matching t)
  (setq helm-recentf-fuzzy-match t)
#+END_SRC

** Make helm can select anything even not match

#+BEGIN_SRC emacs-lisp :tangle no :noweb-ref helm-config
  ;; make helm can select anything even not match
  (setq helm-move-to-line-cycle-in-source nil)
  (setq helm-ff-search-library-in-sexp t)
  (setq helm-ff-file-name-history-use-recentf t)
#+END_SRC

* Plugins Setup

** helm-bm

GitHub: https://github.com/yasuyk/helm-bm

#+BEGIN_SRC emacs-lisp
  (use-package helm-bm)
#+END_SRC

** helm-cscope

=helm-cscope.el= is a helm interface for xcscope.el. You can search cscope database and narrow selection using helm interface.

Helm-cscope shares most functions with xcscope.el. It just provide =M-x helm-cscope-find-*= commands as helm version alternatives for =M-x cscope-find-*=

GitHub: https://github.com/alpha22jp/helm-cscope.el

#+BEGIN_SRC emacs-lisp
  (use-package helm-cscope
    :config
    (add-hook 'c-mode-common-hook 'helm-cscope-mode))
#+END_SRC

** helm-dash

This package uses [[http://www.kapeli.com/dash][Dash]] docsets inside emacs to browse documentation. Here's an article explaining the basic usage of it.

It doesn't require Dash app.

GitHub: https://github.com/areina/helm-dash

#+BEGIN_SRC emacs-lisp
  (use-package helm-dash)
#+END_SRC

** helm-gtags

=helm-gtags.el= is GNU GLOBAL helm interface.

GitHub: https://github.com/syohex/emacs-helm-gtags

#+BEGIN_SRC emacs-lisp
  (use-package helm-gtags
    :config
    (setq helm-gtags-ignore-case t)
    (setq helm-gtags-auto-update t)
    (setq helm-gtags-use-input-at-cursor t)
    (setq helm-gtags-pulse-at-cursor t)
    ;; add to following modes
    (add-hook 'c-mode-hook #'helm-gtags-mode)
    (add-hook 'c++-mode-hook #'helm-gtags-mode))
#+END_SRC

** helm-projectile

GitHub: https://github.com/bbatsov/helm-projectile

#+BEGIN_SRC emacs-lisp
  (use-package helm-projectile
    :config
    ;; make projectile use helm as completion system
    (setq projectile-completion-system 'helm)
    ;; start helm-projectile
    (helm-projectile-on))
#+END_SRC

** helm-swoop

List match lines to another buffer, which is able to squeeze by any words you input. At the same time, the original buffer's cursor is jumping line to line according to moving up and down the line list.

GitHub: https://github.com/ShingoFukuyama/helm-swoop

#+BEGIN_SRC emacs-lisp
  (use-package helm-swoop)
#+END_SRC

** helm-c-yasnippet

GitHub: https://github.com/emacs-jp/helm-c-yasnippet

#+BEGIN_SRC emacs-lisp
  (use-package helm-c-yasnippet
    :config
    (setq helm-yas-space-match-any-greedy t))
#+END_SRC

* Setup Keybindings                                              :keybinding:

#+BEGIN_SRC emacs-lisp :tangle no :noweb-ref helm-config
  (bind-keys :map helm-map
             ("TAB"   . helm-execute-persistent-action)
             ("<tab>" . helm-execute-persistent-action)
             ("C-w"   . backward-kill-word)
             ("M-t" . my/minibuffer-switch-to-ramdisk)
             ("M-h" . my/minibuffer-switch-to-home)
             ("M-/" . my/minibuffer-switch-to-rootdir)
             ("M-s" . my/minibuffer-switch-to-tramp)
             ("M-v" . my/minibuffer-switch-to-vm)
             ("M-c" . my/minibuffer-switch-to-cluster)
             ("C-z" . helm-select-action))
#+END_SRC